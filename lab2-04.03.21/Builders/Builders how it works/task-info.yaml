type: edu
custom_name: Builders how it works
files:
- name: src/Task.kt
  visible: true
  placeholders:
  - offset: 91
    length: 42
    placeholder_text: 1 to null, 2 to null, 3 to null, 4 to null
    initial_state:
      length: 42
      offset: 91
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: 1 to c, 2 to b, 3 to b, 4 to c
  text: |
    import Answer.*

    enum class Answer { a, b, c }

    val answers = mapOf<Int, Answer?>(
            1 to null, 2 to null, 3 to null, 4 to null
    )
  learner_created: false
- name: test/tests.kt
  visible: false
  text: |-
    import org.junit.Test
    import org.junit.Assert
    import Answer.*

    class TestBuildersHowItWorks {
        @Test(timeout = 1000)
        fun testBuildersQuiz() {
            if (answers.values.toSet() == setOf(null)) {
                Assert.fail("Please specify your answers!")
            }
            val correctAnswers = mapOf(22 - 20 to b, 1 + 3 to c, 11 - 8 to b, 79 - 78 to c)
            if (correctAnswers != answers) {
                val incorrect = (1..4).filter { answers[it] != correctAnswers[it] }
                val message = if (incorrect.size > 1)
                    "Your answers for questions $incorrect are incorrect"
                else
                    "Your answer for question $incorrect is incorrect"
                Assert.fail(message)
            }
        }
    }
  learner_created: false
status: Unchecked
record: -1
